[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\gusta\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\gusta\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Eclipse Adoptium Java 17.0.6)
[debug]       Load.loadUnit: plugins took 251.998ms
[debug]       Load.loadUnit: defsScala took 1.0927ms
[debug] [Loading] Scanning directory C:\Users\gusta\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\gusta\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 46.0572 ms
[debug]           Load.resolveProject(global-plugins) took 129.2322ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\gusta\.sbt\1.0\plugins, plugins: List(<none>))) took 232.2947ms
[debug] [Loading] Done in C:\Users\gusta\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 295.5063ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6637ms
[debug]     Load.loadUnit(file:/C:/Users/gusta/.sbt/1.0/plugins/, ...) took 575.9909ms
[debug]   Load.apply: load took 1279.3047ms
[debug]   Load.apply: resolveProjects took 29.1091ms
[debug]   Load.apply: finalTransforms took 192.9628ms
[debug]   Load.apply: config.delegates took 21.5704ms
[debug]   Load.apply: Def.make(settings)... took 1135.8049ms
[debug]   Load.apply: structureIndex took 240.4127ms
[debug]   Load.apply: mkStreams took 3.5361ms
[info] loading global plugins from C:\Users\gusta\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11392.9068ms
[debug]           Load.loadUnit: plugins took 75.3384ms
[debug]           Load.loadUnit: defsScala took 0.0105ms
[debug] [Loading] Scanning directory C:\chisel-lab\lab1\project
[debug]             Load.loadUnit: mkEval took 23.9977ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\chisel-lab\lab1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4519 ms
[info] loading settings for project lab1-build from idea.sbt ...
[debug]               Load.resolveProject(lab1-build) took 19.5351ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab1-build, base: C:\chisel-lab\lab1\project, plugins: List(<none>))) took 22.9726ms
[debug] [Loading] Done in C:\chisel-lab\lab1\project, returning: (lab1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5044.4387ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.8267ms
[debug]         Load.loadUnit(file:/C:/chisel-lab/lab1/project/, ...) took 5132.4507ms
[debug]       Load.apply: load took 5136.2194ms
[debug]       Load.apply: resolveProjects took 0.2816ms
[debug]       Load.apply: finalTransforms took 32.7045ms
[debug]       Load.apply: config.delegates took 0.4659ms
[debug]       Load.apply: Def.make(settings)... took 185.8342ms
[debug]       Load.apply: structureIndex took 112.6375ms
[debug]       Load.apply: mkStreams took 0.006ms
[info] loading project definition from C:\chisel-lab\lab1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7776.4963ms
[debug]     Load.loadUnit: defsScala took 0.0136ms
[debug] [Loading] Scanning directory C:\chisel-lab\lab1
[debug]       Load.loadUnit: mkEval took 0.9586ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\chisel-lab\lab1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.9061 ms
[info] loading settings for project lab1 from build.sbt ...
[debug]         Load.resolveProject(lab1) took 66.0743ms
[debug]       Load.loadTransitive: finalizeProject(Project(id lab1, base: C:\chisel-lab\lab1, plugins: List(<none>))) took 73.6943ms
[debug] [Loading] Done in C:\chisel-lab\lab1, returning: (lab1)
[debug]     Load.loadUnit: loadedProjectsRaw took 6123.9832ms
[debug]     Load.loadUnit: cleanEvalClasses took 51.243ms
[debug]   Load.loadUnit(file:/C:/chisel-lab/lab1/, ...) took 13953.9796ms
[debug] Load.apply: load took 13959.2608ms
[debug] Load.apply: resolveProjects took 0.2455ms
[debug] Load.apply: finalTransforms took 54.2096ms
[debug] Load.apply: config.delegates took 0.7626ms
[debug] Load.apply: Def.make(settings)... took 152.7075ms
[debug] Load.apply: structureIndex took 87.4793ms
[debug] Load.apply: mkStreams took 0.0072ms
[info] set current project to lab1 (in build file:/C:/chisel-lab/lab1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58009 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58009, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to lab1 (in build file:/C:/chisel-lab/lab1/)
[debug] > Exec(idea-shell, None, None)
