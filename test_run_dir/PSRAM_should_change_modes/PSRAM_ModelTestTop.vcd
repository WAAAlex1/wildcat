$date
2025-03-27T14:42+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module PSRAM_ModelTestTop $end
 $var wire 1 " io_idle $end
 $var wire 24 & io_address $end
 $var wire 8 ) io_command $end
 $var wire 1 . io_mode $end
 $var wire 8 / val2Write $end
 $var wire 24 0 address $end
 $var wire 4 6 io_dir $end
 $var wire 8 ; io_val2Write $end
 $var wire 3 > stateReg $end
 $var wire 1 E model $end
 $var wire 4 H io_IN $end
 $var wire 1 I reset $end
 $var wire 8 J io_readMemVal $end
 $var wire 8 L readMemVal $end
 $var wire 1 Q mode $end
 $var wire 1 T clock $end
 $var wire 1 W io_CS $end
 $var wire 4 Y io_OUT $end
 $var wire 8 Z io_state $end
 $var wire 8 [ command $end
  $scope module model $end
   $var wire 1 ! waitDone $end
   $var wire 1 # clock $end
   $var wire 10 $ mem_readMemVal_MPORT_addr_pipe_0 $end
   $var wire 1 % mem_readMemVal_MPORT_en_pipe_0 $end
   $var wire 1 ( rw $end
   $var wire 1 + io_CS $end
   $var wire 24 , lastRead $end
   $var wire 3 - stateReg_0 $end
   $var wire 3 2 idx $end
   $var wire 8 3 val2Write $end
   $var wire 8 5 lastCommand $end
   $var wire 8 8 readMemVal $end
   $var wire 4 : io_IN $end
   $var wire 8 < val2Write_0 $end
   $var wire 1 ? mode_0 $end
   $var wire 3 @ stateReg $end
   $var wire 1 D io_dir $end
   $var wire 24 G address $end
   $var wire 8 M command_0 $end
   $var wire 8 N mem $end
   $var wire 24 O address_0 $end
   $var wire 1 P mode $end
   $var wire 8 R command $end
   $var wire 1 S reset $end
   $var wire 4 U io_OUT $end
   $var wire 8 X readMemVal_0 $end
    $scope module mem $end
     $var wire 8 F MPORT $end
      $scope module readMemVal_MPORT $end
       $var wire 1 ' clk $end
       $var wire 8 C data $end
       $var wire 10 K addr $end
       $var wire 1 \ en $end
      $upscope $end
      $scope module MPORT $end
       $var wire 8 * data $end
       $var wire 1 1 valid $end
       $var wire 8 4 pipeline_data_0 $end
       $var wire 1 7 clk $end
       $var wire 1 9 pipeline_valid_0 $end
       $var wire 10 = pipeline_addr_0 $end
       $var wire 1 A en $end
       $var wire 10 B addr $end
       $var wire 1 V mask $end
      $upscope $end
    $upscope $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
01
b0000000000 =
07
09
0?
0A
0D
0E
0I
b0000000000 $
0P
0Q
b00000000 J
b00000000 M
0S
b00000000 L
0T
b00000000 F
0W
b00000000 C
b000000000000000000000000 G
0\
b00000000 [
b00000000 Z
b000000000000000000000000 O
b00000000 X
b00000000 R
b0000 :
b00000000 N
b0000 6
b00000000 *
1V
b00000000 )
b000000000000000000000000 &
b0000 H
b000000000000000000000000 ,
b00000000 ;
b0000 U
b000000000000000000000000 0
b00000000 <
b000 2
b00000000 8
b00000000 3
b000 >
b00000000 5
b000 @
b00000000 4
b00000000 /
b0000 Y
b000 -
0!
0"
0#
0%
b0000000000 K
0'
0(
0+
b0000000000 B
0.
$end
#0
1S
1I
#1
1#
1T
1'
17
1(
#6
0#
0S
0T
0'
07
1W
0I
1+
#11
1#
1T
1'
17
#16
0#
0T
0'
07
#21
1#
1T
1'
17
#26
0#
0T
0'
07
#31
1#
1T
1'
17
#36
0#
0T
0'
07
0W
0+
#41
b001 2
1#
1T
1'
17
#46
0#
0T
0'
07
#51
b010 2
1#
1T
1'
17
#56
b00000001 R
0#
0T
0'
07
b0001 H
b00000001 )
b0001 :
b00000001 [
b00000001 M
#61
b011 2
b00000011 R
1#
1T
b00000001 5
1'
17
b00000011 )
b00000011 [
b000000000000000000000001 ,
b00000011 M
#66
0#
0T
0'
07
#71
b100 2
b00000111 R
1#
1T
b00000011 5
1'
17
b00000111 )
b00000111 [
b000000000000000000000011 ,
b00000111 M
#76
b00000110 R
0#
0T
0'
07
b0000 H
b00000110 )
b0000 :
b00000110 [
b00000110 M
#81
b101 2
b00001100 R
1#
1T
b00000110 5
1'
17
b00001100 )
b00001100 [
b000000000000000000000110 ,
b00001100 M
#86
b00001101 R
0#
0T
0'
07
b0001 H
b00001101 )
b0001 :
b00001101 [
b00001101 M
#91
b110 2
b00011011 R
1#
1T
b00001101 5
1'
17
b00011011 )
b00011011 [
b000000000000000000001101 ,
b00011011 M
#96
b00011010 R
0#
0T
0'
07
b0000 H
b00011010 )
b0000 :
b00011010 [
b00011010 M
#101
b111 2
b00110100 R
1#
1T
b00011010 5
1'
17
b00110100 )
b00110100 [
b000000000000000000011010 ,
b00110100 M
#106
b00110101 R
0#
0T
0'
07
b0001 H
b00110101 )
b0001 :
b00110101 [
b00110101 M
#111
b000 2
b00000001 R
1#
1T
b00110101 5
1'
17
b00000001 )
b00000001 [
b000000000000000000000000 ,
b00000001 M
#116
b00000000 R
0#
0T
0'
07
1W
b00000000 )
1+
b00000000 [
b00000000 M
#121
1P
1Q
1#
1T
1'
17
b000000000000000000000001 ,
1.
1?
#126
0#
0T
0'
07
#131
1#
1T
1'
17
#136
0#
0T
0'
07
#141
1#
1T
1'
17
#146
0#
0T
0'
07
#151
1#
1T
1'
17
#156
0#
0'
b1111 H
b00011111 )
0+
b00011111 M
b00011111 R
0T
07
0W
b1111 :
b00011111 [
#161
b001 2
b11111111 R
1#
1T
b00011111 5
1'
17
b11111111 )
b11111111 [
b000000000000000000011111 ,
b11111111 M
#166
b11110101 R
0#
0T
0'
07
b0101 H
b11110101 )
b0101 :
b11110101 [
b11110101 M
#171
b000 2
b00000101 R
1#
1T
b11110101 5
1'
17
b00000101 )
b00000101 [
b000000000000000000000000 ,
b00000101 M
#176
b00000000 R
0#
0T
0'
07
1W
b00000000 )
1+
b00000000 [
b00000000 M
#181
0P
0Q
1#
1T
1'
17
b000000000000000000000101 ,
0.
0?
#186
0#
0T
0'
07
0W
b0000 H
