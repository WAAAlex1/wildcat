$date
2025-03-20T15:04+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module WildcatTestTop $end
 $var wire 32 w debugRegs_26_9 $end
 $var wire 32 x debugRegs_26_8 $end
 $var wire 32 z debugRegs_26_7 $end
 $var wire 32 { debugRegs_26_6 $end
 $var wire 32 } debugRegs_26_1 $end
 $var wire 32 ~ debugRegs_26_0 $end
 $var wire 32 "" debugRegs_26_5 $end
 $var wire 32 "# debugRegs_26_4 $end
 $var wire 32 "$ debugRegs_26_3 $end
 $var wire 32 "& debugRegs_26_2 $end
 $var wire 1 "( clock $end
 $var wire 1 "- io_tx $end
 $var wire 1 "3 cpuTop $end
 $var wire 8 "8 io_led $end
 $var wire 1 "M decExRegdecOutisECall_26 $end
 $var wire 1 #* reset $end
 $var wire 32 #i debugRegs_26_31 $end
 $var wire 32 #j debugRegs_26_30 $end
 $var wire 32 $i debugRegs_26_18 $end
 $var wire 32 $j debugRegs_26_17 $end
 $var wire 32 $k debugRegs_26_19 $end
 $var wire 32 $l debugRegs_26_14 $end
 $var wire 32 $m debugRegs_26_13 $end
 $var wire 32 $n debugRegs_26_16 $end
 $var wire 32 $p debugRegs_26_15 $end
 $var wire 32 $u debugRegs_26_10 $end
 $var wire 32 $w debugRegs_26_12 $end
 $var wire 32 $x debugRegs_26_11 $end
 $var wire 32 $y debugRegs_26_29 $end
 $var wire 32 $z debugRegs_26_28 $end
 $var wire 32 $} debugRegs_26_25 $end
 $var wire 32 $~ debugRegs_26_24 $end
 $var wire 32 %" debugRegs_26_27 $end
 $var wire 32 %# debugRegs_26_26 $end
 $var wire 32 %' debugRegs_26_21 $end
 $var wire 32 %( debugRegs_26_20 $end
 $var wire 32 %) debugRegs_26_23 $end
 $var wire 32 %- debugRegs_26_22 $end
 $var wire 1 %. io_rx $end
 $var wire 1 %4 io_stop $end
 $var wire 32 %G io_regFile_6 $end
 $var wire 32 %H io_regFile_7 $end
 $var wire 32 %I io_regFile_4 $end
 $var wire 32 %J io_regFile_5 $end
 $var wire 32 %K io_regFile_2 $end
 $var wire 32 %L io_regFile_3 $end
 $var wire 32 %M io_regFile_0 $end
 $var wire 32 %N io_regFile_1 $end
 $var wire 32 %O io_regFile_8 $end
 $var wire 32 %P io_regFile_9 $end
 $var wire 32 %j io_regFile_20 $end
 $var wire 32 %k io_regFile_21 $end
 $var wire 32 %l io_regFile_24 $end
 $var wire 32 %m io_regFile_25 $end
 $var wire 32 %o io_regFile_22 $end
 $var wire 32 %p io_regFile_23 $end
 $var wire 32 %q io_regFile_28 $end
 $var wire 32 %r io_regFile_29 $end
 $var wire 32 %s io_regFile_26 $end
 $var wire 32 %t io_regFile_27 $end
 $var wire 32 %u io_regFile_19 $end
 $var wire 32 %z io_regFile_10 $end
 $var wire 32 %{ io_regFile_13 $end
 $var wire 32 %| io_regFile_14 $end
 $var wire 32 %} io_regFile_11 $end
 $var wire 32 %~ io_regFile_12 $end
 $var wire 32 &! io_regFile_17 $end
 $var wire 32 &# io_regFile_18 $end
 $var wire 32 &$ io_regFile_15 $end
 $var wire 32 &% io_regFile_16 $end
 $var wire 32 &2 io_regFile_31 $end
 $var wire 32 &3 io_regFile_30 $end
 $var wire 8 &> ledReg_26 $end
  $scope module cpuTop.cpu $end
  $upscope $end
  $scope module cpuTop.imem $end
  $upscope $end
  $scope module cpuTop.tx.tx $end
  $upscope $end
  $scope module cpuTop.dmem $end
  $upscope $end
  $scope module cpuTop.SimpleCache.Controller.tagStore $end
  $upscope $end
  $scope module cpuTop.SimpleCache.Controller $end
  $upscope $end
  $scope module cpuTop.rx $end
  $upscope $end
  $scope module cpuTop.SimpleCache $end
  $upscope $end
  $scope module cpuTop $end
   $var wire 2 F uartStatusReg $end
   $var wire 32 X debugRegs_6 $end
   $var wire 32 Y debugRegs_7 $end
   $var wire 32 Z debugRegs_8 $end
   $var wire 32 [ debugRegs_9 $end
   $var wire 32 ] debugRegs_0 $end
   $var wire 32 ^ debugRegs_1 $end
   $var wire 32 ` debugRegs_2 $end
   $var wire 32 a debugRegs_3 $end
   $var wire 32 b debugRegs_4 $end
   $var wire 32 d debugRegs_5 $end
   $var wire 1 y decExReg_decOut_isECall $end
   $var wire 32 "+ memAddressReg $end
   $var wire 1 "p dmem $end
   $var wire 32 #9 debugRegs_22 $end
   $var wire 32 #: debugRegs_23 $end
   $var wire 32 #< debugRegs_20 $end
   $var wire 32 #= debugRegs_21 $end
   $var wire 32 #> debugRegs_26 $end
   $var wire 32 #? debugRegs_27 $end
   $var wire 32 #@ debugRegs_24 $end
   $var wire 32 #A debugRegs_25 $end
   $var wire 32 #C debugRegs_28 $end
   $var wire 32 #D debugRegs_29 $end
   $var wire 32 #E debugRegs_30 $end
   $var wire 32 #F debugRegs_31 $end
   $var wire 8 #^ ledReg_0 $end
   $var wire 1 #a printf $end
   $var wire 1 #d io_tx $end
   $var wire 1 #r clock $end
   $var wire 32 #} debugRegs_11 $end
   $var wire 32 #~ debugRegs_12 $end
   $var wire 32 $" debugRegs_10 $end
   $var wire 32 $# debugRegs_15 $end
   $var wire 32 $$ debugRegs_16 $end
   $var wire 32 $% debugRegs_13 $end
   $var wire 32 $' debugRegs_14 $end
   $var wire 32 $( debugRegs_19 $end
   $var wire 32 $) debugRegs_17 $end
   $var wire 32 $+ debugRegs_18 $end
   $var wire 1 $2 reset $end
   $var wire 1 $3 io_rx $end
   $var wire 1 $; imem $end
   $var wire 1 $> SimpleCache $end
   $var wire 1 $e cpu $end
   $var wire 1 %: tx $end
   $var wire 1 %D rx $end
   $var wire 8 &) ledReg $end
    $scope module SimpleCache $end
     $var wire 2 ! weBits_hi $end
     $var wire 1 K io_stall $end
     $var wire 1 h reset $end
     $var wire 4 "! weBits $end
     $var wire 1 "h Controller $end
     $var wire 32 #3 io_rdAddress $end
     $var wire 1 #l io_wrEnable_3 $end
     $var wire 1 #n io_wrEnable_1 $end
     $var wire 1 #o io_wrEnable_2 $end
     $var wire 1 #p io_wrEnable_0 $end
     $var wire 32 #u io_wrAddress $end
     $var wire 1 $. io_rdEnable $end
     $var wire 2 $< stateReg $end
     $var wire 2 &" storeType $end
     $var wire 2 && weBits_lo $end
     $var wire 1 &- clock $end
      $scope module Controller $end
       $var wire 2 ? stateReg $end
       $var wire 1 C io_memReady $end
       $var wire 8 G index $end
       $var wire 1 k io_cacheMiss $end
       $var wire 1 "' io_ready $end
       $var wire 20 #! actualTag $end
       $var wire 32 #( updatedTag $end
       $var wire 32 #Z io_memAdd $end
       $var wire 1 #` tagStore $end
       $var wire 1 #x io_validReq $end
       $var wire 1 $H clock $end
       $var wire 1 $o io_rw $end
       $var wire 3 %* writeIndex $end
       $var wire 32 %c targetTagWord $end
       $var wire 1 %e cacheValid $end
       $var wire 1 &. reset $end
       $var wire 20 &; targetTag $end
        $scope module tagStore $end
         $var wire 1 U mem_io_DO_MPORT_en_pipe_0 $end
         $var wire 32 ") io_DI $end
         $var wire 32 "* io_DO $end
         $var wire 1 "/ io_EN $end
         $var wire 9 #v io_ad $end
         $var wire 32 #| mem $end
         $var wire 9 $` mem_io_DO_MPORT_addr_pipe_0 $end
         $var wire 1 %@ io_rw $end
         $var wire 1 %X clock $end
          $scope module mem $end
           $var wire 32 &? MPORT $end
            $scope module MPORT $end
             $var wire 1 T clk $end
             $var wire 32 "; pipeline_data_0 $end
             $var wire 1 "^ mask $end
             $var wire 1 "t en $end
             $var wire 32 #_ data $end
             $var wire 9 $b pipeline_addr_0 $end
             $var wire 1 %a pipeline_valid_0 $end
             $var wire 9 &1 addr $end
             $var wire 1 &7 valid $end
            $upscope $end
            $scope module io_DO_MPORT $end
             $var wire 32 "9 data $end
             $var wire 1 %/ clk $end
             $var wire 9 %7 addr $end
             $var wire 1 %] en $end
            $upscope $end
          $upscope $end
        $upscope $end
      $upscope $end
    $upscope $end
    $scope module cpu $end
     $var wire 32 " exFwdReg_wbData $end
     $var wire 7 # decOut_decOut_aluOp_opcode $end
     $var wire 5 % decEx_rs2 $end
     $var wire 1 & decExReg__decOut_isLui $end
     $var wire 32 ' debugRegs_10 $end
     $var wire 32 ( val2 $end
     $var wire 32 * debugRegs_12 $end
     $var wire 32 + debugRegs_11 $end
     $var wire 32 , debugRegs_14 $end
     $var wire 2 - decExReg__memLow $end
     $var wire 32 . debugRegs_13 $end
     $var wire 32 / debugRegs_16 $end
     $var wire 32 1 debugRegs_15 $end
     $var wire 32 2 debugRegs_18 $end
     $var wire 32 3 debugRegs_17 $end
     $var wire 32 5 debugRegs_19 $end
     $var wire 1 6 decExReg__decOut_isAuiPc $end
     $var wire 2 7 decEx_memLow $end
     $var wire 1 8 clock $end
     $var wire 32 9 decEx_rs1Val $end
     $var wire 5 : decExReg__rs2 $end
     $var wire 5 ; decExReg__rs1 $end
     $var wire 1 < decOut_isBranch $end
     $var wire 1 > reset $end
     $var wire 5 A decEx_rs1 $end
     $var wire 1 E decOut_isJal $end
     $var wire 3 H decEx_func3 $end
     $var wire 1 I decOut_isAuiPc $end
     $var wire 32 M res $end
     $var wire 32 R instrReg $end
     $var wire 1 V decExReg__decOut_isBranch $end
     $var wire 32 \ decExReg__pc $end
     $var wire 3 c decOut_func3 $end
     $var wire 32 f io_dmem_rdData $end
     $var wire 5 p decExReg__rd $end
     $var wire 32 s wbData $end
     $var wire 1 v decExReg__decOut_isECall $end
     $var wire 32 | io_imem_data $end
     $var wire 4 "2 decEx_decOut_aluOp $end
     $var wire 1 "4 decEx_decOut_isJalr $end
     $var wire 1 ": decOut_isLoad $end
     $var wire 7 "< decOut_opcode $end
     $var wire 5 "? rs1 $end
     $var wire 5 "@ rs2 $end
     $var wire 32 "A io_dmem_wrData $end
     $var wire 1 "D decExReg__decOut_rfWrite $end
     $var wire 32 "G debugRegs_0_23 $end
     $var wire 32 "I debugRegs_0_24 $end
     $var wire 32 "J debugRegs_0_25 $end
     $var wire 32 "K debugRegs_0_26 $end
     $var wire 32 "L debugRegs_0_20 $end
     $var wire 32 "N debugRegs_0_21 $end
     $var wire 32 "O debugRegs_0_22 $end
     $var wire 32 "R debugRegs_0_27 $end
     $var wire 32 "S debugRegs_0_28 $end
     $var wire 32 "T debugRegs_0_29 $end
     $var wire 5 "U wbDest $end
     $var wire 32 "V debugRegs_0_30 $end
     $var wire 1 "W decOut_rfWrite $end
     $var wire 32 "Y debugRegs_0_31 $end
     $var wire 32 "Z res_res_1 $end
     $var wire 1 "] decEx_decOut_isBranch $end
     $var wire 32 "_ debugRegs_0_12 $end
     $var wire 32 "` debugRegs_0_13 $end
     $var wire 32 "a debugRegs_0_14 $end
     $var wire 32 "c debugRegs_0_15 $end
     $var wire 32 "d debugRegs_0_10 $end
     $var wire 32 "e debugRegs_0_11 $end
     $var wire 5 "f regs_rs2Val_MPORT_addr_pipe_0 $end
     $var wire 32 "g debugRegs_0_16 $end
     $var wire 32 "i debugRegs_0_17 $end
     $var wire 32 "j debugRegs_0_18 $end
     $var wire 32 "k debugRegs_0_19 $end
     $var wire 1 "m io_dmem_rdEnable $end
     $var wire 32 "v regs $end
     $var wire 32 "x decExReg__rs2Val $end
     $var wire 1 "z decExReg__decOut_isLoad $end
     $var wire 32 "{ memAddress $end
     $var wire 4 "| decExReg__decOut_aluOp $end
     $var wire 5 "} exFwdReg_wbDest $end
     $var wire 1 #, decEx_decOut_isImm $end
     $var wire 32 #0 branchTarget $end
     $var wire 1 #6 regs_rs1Val_MPORT_en_pipe_0 $end
     $var wire 32 #H instr $end
     $var wire 32 #I pcRegReg $end
     $var wire 32 #K debugRegs_21 $end
     $var wire 32 #L io_dmem_rdAddress $end
     $var wire 1 #M decOut_isECall $end
     $var wire 32 #N debugRegs_20 $end
     $var wire 32 #O debugRegs_23 $end
     $var wire 32 #P debugRegs_22 $end
     $var wire 32 #Q debugRegs_25 $end
     $var wire 32 #R debugRegs_24 $end
     $var wire 32 #S debugRegs_27 $end
     $var wire 32 #T debugRegs_26 $end
     $var wire 32 #U debugRegs_29 $end
     $var wire 32 #V debugRegs_28 $end
     $var wire 1 #W decEx_valid $end
     $var wire 5 #X regs_rs1Val_MPORT_addr_pipe_0 $end
     $var wire 32 #[ debugRegs_30 $end
     $var wire 32 #\ debugRegs_31 $end
     $var wire 1 #e decEx_decOut_isAuiPc $end
     $var wire 32 #g decOut_decOut_imm_imm $end
     $var wire 1 #k decOut_isStore $end
     $var wire 32 #m res_res $end
     $var wire 32 #s rs1Val $end
     $var wire 1 $& doBranch_res $end
     $var wire 4 $- decOut_aluOp $end
     $var wire 1 $0 io_imem_stall $end
     $var wire 32 $1 pcReg $end
     $var wire 3 $4 decOut_decOut_aluOp_func3 $end
     $var wire 1 $5 decEx_decOut_isECall $end
     $var wire 7 $6 decOut_decOut_aluOp_func7 $end
     $var wire 32 $8 io_dmem_wrAddress $end
     $var wire 32 $9 v2 $end
     $var wire 32 $: v1 $end
     $var wire 32 $? wrd $end
     $var wire 1 $A decExReg__valid $end
     $var wire 1 $C decExReg_decOut_isECall $end
     $var wire 1 $E io_dmem_wrEnable_1 $end
     $var wire 1 $F io_dmem_wrEnable_2 $end
     $var wire 1 $G io_dmem_wrEnable_3 $end
     $var wire 32 $I decEx_pc $end
     $var wire 32 $J io_imem_address $end
     $var wire 1 $K io_dmem_wrEnable_0 $end
     $var wire 1 $L decOut_isImm $end
     $var wire 32 $N debugRegs_8 $end
     $var wire 32 $O debugRegs_9 $end
     $var wire 32 $Q debugRegs_4 $end
     $var wire 32 $R debugRegs_5 $end
     $var wire 32 $S debugRegs_6 $end
     $var wire 32 $T debugRegs_7 $end
     $var wire 32 $V debugRegs_0 $end
     $var wire 1 $W wrEna $end
     $var wire 32 $Z debugRegs_1 $end
     $var wire 32 $[ debugRegs_2 $end
     $var wire 32 $\ debugRegs_3 $end
     $var wire 32 $^ address $end
     $var wire 32 $_ decOut_imm $end
     $var wire 32 $d data $end
     $var wire 3 $f decOut_instrType $end
     $var wire 1 $h decEx_decOut_isJal $end
     $var wire 1 $| decOut_isJalr $end
     $var wire 1 %! decEx_decOut_isLoad $end
     $var wire 5 %$ decEx_rd $end
     $var wire 5 %% rs2Val_REG $end
     $var wire 1 %, decExReg__decOut_isImm $end
     $var wire 3 %1 decExReg__func3 $end
     $var wire 1 %3 doBranch $end
     $var wire 1 %5 decExReg__decOut_isJal $end
     $var wire 1 %9 exFwdReg_valid $end
     $var wire 1 %? regs_rs2Val_MPORT_en_pipe_0 $end
     $var wire 1 %C decEx_decOut_rfWrite $end
     $var wire 1 %F decOut_isLui $end
     $var wire 32 %Q debugRegs_0_4 $end
     $var wire 32 %R debugRegs_0_3 $end
     $var wire 32 %S debugRegs_0_6 $end
     $var wire 32 %T debugRegs_0_5 $end
     $var wire 32 %U debugRegs_0_8 $end
     $var wire 32 %V debugRegs_0_7 $end
     $var wire 32 %W debugRegs_0_9 $end
     $var wire 5 %Y rs1Val_REG $end
     $var wire 32 %Z debugRegs_0_0 $end
     $var wire 32 %[ debugRegs_0_2 $end
     $var wire 32 %\ debugRegs_0_1 $end
     $var wire 1 %^ decExReg__decOut_isJalr $end
     $var wire 32 %b pcNext $end
     $var wire 1 %f wre_2 $end
     $var wire 1 %g wre_3 $end
     $var wire 1 %h wre_0 $end
     $var wire 1 %i wre_1 $end
     $var wire 32 %v decExReg__rs1Val $end
     $var wire 1 &' decEx_decOut_isLui $end
     $var wire 32 &, rs2Val $end
     $var wire 32 &5 decEx_decOut_imm $end
     $var wire 32 &6 decExReg__decOut_imm $end
     $var wire 4 &: decOut_decOut_aluOp_aluOp $end
     $var wire 32 &< decEx_rs2Val $end
      $scope module regs $end
       $var wire 32 "~ MPORT $end
        $scope module MPORT $end
         $var wire 1 $ mask $end
         $var wire 1 J pipeline_valid_0 $end
         $var wire 32 o data $end
         $var wire 32 t pipeline_data_0 $end
         $var wire 1 u valid $end
         $var wire 1 "w en $end
         $var wire 1 #t clk $end
         $var wire 5 $@ addr $end
         $var wire 5 &= pipeline_addr_0 $end
        $upscope $end
        $scope module rs1Val_MPORT $end
         $var wire 32 ) data $end
         $var wire 1 l en $end
         $var wire 1 q clk $end
         $var wire 5 #{ addr $end
        $upscope $end
        $scope module rs2Val_MPORT $end
         $var wire 32 @ data $end
         $var wire 1 n en $end
         $var wire 1 "u clk $end
         $var wire 5 $a addr $end
        $upscope $end
      $upscope $end
    $upscope $end
    $scope module tx $end
     $var wire 1 0 reset $end
     $var wire 1 P io_channel_ready $end
     $var wire 1 Q clock $end
     $var wire 8 m io_channel_bits $end
     $var wire 1 #J buf $end
     $var wire 1 $g tx $end
     $var wire 1 %0 io_channel_valid $end
     $var wire 1 %d io_txd $end
      $scope module buf $end
       $var wire 1 B io_in_ready $end
       $var wire 8 L io_out_bits $end
       $var wire 1 r io_out_ready $end
       $var wire 1 "6 stateReg $end
       $var wire 1 "X reset $end
       $var wire 1 #B io_out_valid $end
       $var wire 8 $] dataReg $end
       $var wire 1 $t io_in_valid $end
       $var wire 1 %= clock $end
       $var wire 8 %y io_in_bits $end
      $upscope $end
      $scope module tx $end
       $var wire 1 D io_txd $end
       $var wire 10 N shift $end
       $var wire 20 W cntReg $end
       $var wire 1 ", reset $end
       $var wire 4 "P bitsReg $end
       $var wire 1 "b io_channel_ready $end
       $var wire 1 #' clock $end
       $var wire 11 #8 shiftReg $end
       $var wire 1 $c io_channel_valid $end
       $var wire 8 %; io_channel_bits $end
      $upscope $end
    $upscope $end
    $scope module imem $end
     $var wire 1 4 io_stall $end
     $var wire 32 ". io_address $end
     $var wire 32 "C io_data $end
     $var wire 32 "o instructions_0 $end
     $var wire 32 "q instructions_2 $end
     $var wire 32 "r instructions_1 $end
     $var wire 32 #Y addrReg $end
     $var wire 1 #h clock $end
     $var wire 1 $= reset $end
    $upscope $end
    $scope module dmem $end
     $var wire 1 i MEM_2_io_rdData_MPORT_1_en_pipe_0 $end
     $var wire 32 "0 io_wrAddress $end
     $var wire 1 ## io_wrEnable_1 $end
     $var wire 1 #$ io_wrEnable_0 $end
     $var wire 1 #% io_wrEnable_3 $end
     $var wire 1 #& io_wrEnable_2 $end
     $var wire 8 #- MEM_3 $end
     $var wire 8 #. MEM_2 $end
     $var wire 32 #/ io_rdAddress $end
     $var wire 8 #1 MEM_1 $end
     $var wire 32 #z io_wrData $end
     $var wire 1 $M MEM_3_io_rdData_MPORT_en_pipe_0 $end
     $var wire 10 $U MEM_io_rdData_MPORT_3_addr_pipe_0 $end
     $var wire 10 $Y MEM_3_io_rdData_MPORT_addr_pipe_0 $end
     $var wire 1 $r clock $end
     $var wire 10 %2 MEM_2_io_rdData_MPORT_1_addr_pipe_0 $end
     $var wire 1 %< MEM_1_io_rdData_MPORT_2_en_pipe_0 $end
     $var wire 8 %> MEM $end
     $var wire 10 %A MEM_1_io_rdData_MPORT_2_addr_pipe_0 $end
     $var wire 1 %E MEM_io_rdData_MPORT_3_en_pipe_0 $end
     $var wire 32 %` io_rdData $end
      $scope module MEM_2 $end
       $var wire 8 #+ MPORT_2 $end
        $scope module MPORT_2 $end
         $var wire 10 = addr $end
         $var wire 1 "% en $end
         $var wire 1 "\ mask $end
         $var wire 8 $D pipeline_data_0 $end
         $var wire 1 $P pipeline_valid_0 $end
         $var wire 1 $v clk $end
         $var wire 8 ${ data $end
         $var wire 1 %6 valid $end
         $var wire 10 &0 pipeline_addr_0 $end
        $upscope $end
        $scope module io_rdData_MPORT_1 $end
         $var wire 1 j en $end
         $var wire 8 #4 data $end
         $var wire 1 $q clk $end
         $var wire 10 &* addr $end
        $upscope $end
      $upscope $end
      $scope module MEM_1 $end
       $var wire 8 &( MPORT_1 $end
        $scope module io_rdData_MPORT_2 $end
         $var wire 8 O data $end
         $var wire 1 "7 en $end
         $var wire 10 $, addr $end
         $var wire 1 $s clk $end
        $upscope $end
        $scope module MPORT_1 $end
         $var wire 10 "y addr $end
         $var wire 1 #5 valid $end
         $var wire 1 #f pipeline_valid_0 $end
         $var wire 1 $* mask $end
         $var wire 8 $B pipeline_data_0 $end
         $var wire 1 $X clk $end
         $var wire 1 %B en $end
         $var wire 10 &/ pipeline_addr_0 $end
         $var wire 8 &4 data $end
        $upscope $end
      $upscope $end
      $scope module MEM $end
       $var wire 8 #; MPORT $end
        $scope module MPORT $end
         $var wire 10 S pipeline_addr_0 $end
         $var wire 1 e en $end
         $var wire 1 "F valid $end
         $var wire 10 "[ addr $end
         $var wire 1 #c clk $end
         $var wire 8 #y pipeline_data_0 $end
         $var wire 1 %w pipeline_valid_0 $end
         $var wire 8 %x data $end
         $var wire 1 &+ mask $end
        $upscope $end
        $scope module io_rdData_MPORT_3 $end
         $var wire 1 _ clk $end
         $var wire 10 #" addr $end
         $var wire 1 $/ en $end
         $var wire 8 &8 data $end
        $upscope $end
      $upscope $end
      $scope module MEM_3 $end
       $var wire 8 %_ MPORT_3 $end
        $scope module io_rdData_MPORT $end
         $var wire 1 g en $end
         $var wire 8 "B data $end
         $var wire 1 %& clk $end
         $var wire 10 %+ addr $end
        $upscope $end
        $scope module MPORT_3 $end
         $var wire 8 "1 pipeline_data_0 $end
         $var wire 1 "5 pipeline_valid_0 $end
         $var wire 8 "= data $end
         $var wire 1 "l mask $end
         $var wire 1 #G en $end
         $var wire 1 #b valid $end
         $var wire 1 %8 clk $end
         $var wire 10 %n pipeline_addr_0 $end
         $var wire 10 &9 addr $end
        $upscope $end
      $upscope $end
    $upscope $end
    $scope module rx $end
     $var wire 1 "> reset $end
     $var wire 1 "E io_channel_valid $end
     $var wire 4 "H bitsReg $end
     $var wire 1 "Q clock $end
     $var wire 1 "n rxReg $end
     $var wire 1 "s falling_REG $end
     $var wire 1 #) falling $end
     $var wire 1 #2 rxReg_REG $end
     $var wire 8 #7 shiftReg $end
     $var wire 1 #] io_channel_ready $end
     $var wire 1 #q io_rxd $end
     $var wire 20 #w cntReg $end
     $var wire 1 $! valReg $end
     $var wire 8 $7 io_channel_bits $end
    $upscope $end
  $upscope $end
  $scope module cpuTop.tx.buf $end
  $upscope $end
  $scope module cpuTop.tx $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
b00 7
b00 -
b00 !
1"\
1"^
0"%
0"'
0"(
1$*
0",
0"-
1"l
0"/
0"3
0"4
0"5
0"6
0"7
0":
b00000 "@
0">
0##
0#$
0"D
0#%
0"E
0#&
0"F
0#'
0#)
b00000 "?
0#*
0#,
0"M
0"Q
0#2
0#5
0#6
0"W
0"X
0"]
0$!
0#B
0"b
0$&
0#G
0"h
1&+
0#J
0#M
0$.
0"m
0$/
0"n
0$0
0"p
0$2
0$3
0"s
0$5
0"t
0"u
0#W
0"w
0$;
0"z
b00000 %$
0$=
0#]
0$>
b00000 %%
0%!
0#`
0$A
0#a
0#b
0$C
0#c
0#d
0$E
0%&
0#e
0$F
b00000101 #1
0#f
0$G
0$H
b00000 "}
0#h
0$K
0%,
b00000 $@
0#k
0$L
0#l
0$M
0%.
0%/
0#n
0%0
0#o
0$P
0#p
0#q
0%3
b00000 #X
0#r
0%4
0%5
0#t
0%6
0$W
0%8
0$X
0%9
0#x
0%:
0%<
0%=
0%?
0%@
0%B
0%C
0$c
0%D
b00000 "f
0%E
0$e
0%F
0&'
0$g
b00 F
0$h
0&-
0&.
b00 ?
0$o
b00000 "U
0$q
0$r
0$s
0$t
0&7
0$v
0%X
0$|
0%]
0%^
0%a
0%d
0%e
b00000 &=
0%f
0%g
0%h
b0000000000 #"
0%i
b00000 %Y
0%w
b00000 #{
b00000 $a
b0000000000 "[
b00000000000000000000 #!
b0000000000 N
b0000000000 S
b0000000000 &0
b0000000000 =
b0000000000 &*
b0000000000 &/
b00000 %
b0000000000 &9
b00000 ;
b00000 :
b00000000000000000000000000000000 ~
b0000000000 %n
b00000 A
b00000000000 #8
b0000 "!
b00000000000000000000000000000000 f
b00000000000000000000000000000000 b
b00000000000000000000000000000000 d
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 a
b0000000000 $,
b0000 "2
b00000000000000000000000000000000 `
b00000000000000000000000000000000 {
b00000000000000000000000000000000 z
b00000000000000000000000000000000 }
b00000000000000000000000000000000 |
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b0000000000 "y
b00000000000000000000000000000000 o
b00000 p
b0000000000 %2
b00000000000000000000000000000000 M
b0000 "H
b0000000000 $U
b0000000000 %+
b0000 "P
b00000000000000000000000000000000 @
b00000000000000000000000000000000 [
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 ]
b0000000000 %A
b00000000000000000000000000000000 \
0&
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 X
b00000000000000000000000000000000 R
b0000000000 $Y
00
b00000000000000000000000000000000 +
b0000000 "<
b00000000000000000000000000000000 *
b00000000 m
b00000000000000000000000000000000 ,
04
b00000000000000000000000000000000 '
06
b0000 $-
b00000000000000000000000000000000 )
b00000000000000000000000000000000 (
08
b00000000000000000000000000000000 "
0<
0>
0B
1$
0C
0D
0E
b00000000000000000000000000000000 9
b00000000000000000000000000000000 3
0I
b0000 "|
b00000000000000000000000000000000 2
0J
b00000000000000000000000000000000 5
0K
b00000000000000000000000000000000 /
b00000000000000000000000000000000 .
b00000000000000000000000000000000 1
0P
0Q
b00000000 L
0T
b00000000 G
0U
0V
0_
0e
0g
0h
0i
0j
0k
0l
b00000000 O
0n
0q
0r
0u
0v
0y
b0000000 $6
b00 &&
b00 &"
b0000 &:
b00 $<
b00000000000000000000000000000000 %R
b00000000000000000000000000000000 &3
b00000000000000000000000000000000 $p
b00000000000000000000000000000000 %Q
b00000000000000000000000000000000 &2
b00000000000000000000000000000000 %P
b00000000000000000000000000000000 $n
b00000000000000000000000000000000 %O
b00000000000000000000000000000000 $u
b00000000000000000000000000000000 %V
b00010011 %>
b00000000000000000000000000000000 %U
b00000000000000000000000000000000 &6
b00000000000000000000000000000000 %T
b00000000000000000000000000000000 &5
b00000000000000000000000000000000 %S
b00000000000000000000000000000000 $i
b00000000000000000000000000000000 %J
b00000000000000000000000000000000 %I
b00000000000000000000000000000000 %H
b00000000000000000000000000000000 %G
b00000000000000000000000000000000 $m
b00000000000000000000000000000000 %N
b00000000000000000000000000000000 $l
b00000000000000000000000000000000 %M
b00000000000000000000000000000000 $k
b00000000000000000000000000000000 %L
b00000000000000000000000000000000 $j
b00000000000000000000000000000000 %K
b00000000000000000000000000000000 &,
b00000000000000000000000000000000 %b
b00000000000000000000000000000000 %`
b00000000 $7
b00000000000000000000000000000000 $~
b00000000000000000000000000000000 %c
b00000000000000000000000000000000 $y
b00000000000000000000000000000000 %Z
b00000000000000000000000000000000 $x
b00000000000000000000000000000000 $w
b00000000 #^
b00000000000000000000000000000000 %W
b00000000000000000000000000000000 $}
b00000000000000000000000000000000 &?
b00000000 $D
b00000000000000000000000000000000 %\
b00000000000000000000000000000000 $z
b00000000000000000000000000000000 %[
b00000000000000000000000000000000 &<
b00000000 $B
b00000000000000000000000000000000 %r
b00000000000000000000000000000000 %q
b00000000000000000000000000000000 %p
b00000000000000000000000000000000 %o
b000 c
b00000000000000000000000000000000 %v
b00000000000000000000000000000000 %u
b00000000000000000000000000000000 %t
b00000000000000000000000000000000 %s
b00000000000000000000000000000000 %j
b00000000000000000000 #w
b00000000000000000000 W
b00000000000000000000000000000000 %m
b00000000000000000000000000000000 %l
b00000000000000000000000000000000 %k
b00000000 $]
b00000000 #y
b00000000 %;
b00000000000000000000000000000000 %z
b00000000000000000000000000000000 %~
b00000000000000000000000000000000 %}
b00000000000000000000000000000000 %|
b00000000000000000000000000000000 %{
b00000000000000000000000000000000 "o
b00000000000000000000000000000000 #P
b00000000000000000000000000000000 $1
b00000000000000000000000000000000 #O
b00000000000000000000000000000000 #N
b00000000 &)
b000 H
b00000000 &(
b00000000000000000000000000000000 #T
b00000000000000000000000000000000 "r
b00000000000000000000000000000000 #S
b00000000000000000000000000000000 "q
b00000000000000000000000000000000 #R
b00000000000000000000000000000000 #Q
b00000000000000000000000000000000 "g
b00000000000000000000000000000000 #H
b00000000000000000000000000000000 $)
b00000000000000000000000000000000 $(
b00000000000000000000 &;
b00000000000000000000000000000000 "e
b00000000000000000000000000000000 #F
b00000000000000000000000000000000 $'
b00000000000000000000000000000000 "d
b00000000000000000000000000000000 #E
b00000000000000000000000000000000 "k
b00000000000000000000000000000000 #L
b00000000000000000000000000000000 "j
b00000000000000000000000000000000 #K
b00000000000000000000000000000000 "i
b00000000000000000000000000000000 $+
b00000000000000000000000000000000 #I
b00000000 &4
b00000000000000000000000000000000 %"
b00000000000000000000000000000000 "~
b00000000000000000000000000000000 #_
b00000000000000000000000000000000 $?
b00000000 &8
b00000000 &>
b00000000 ${
b00000000000000000000000000000000 %#
b00000000000000000000000000000000 $9
b00000000000000000000000000000000 "v
b00000000000000000000000000000000 $8
b00000000000000000000000000000000 #V
b00000000000000000000000000000000 #U
b00000000 %_
b00000000000000000000000000000000 "{
b00000000000000000000000000000000 #\
b00000000000000000000000000000000 #[
b00000000000000000000000000000000 #Z
b00000000000000000000000000000000 "x
b00000000000000000000000000000000 #Y
b00000000000000000000000000000000 $:
b00000000000000000000000000000000 $Q
b00000000000000000000000000000000 $O
b00000000000000000000000000000000 #m
b00000000000000000000000000000000 $N
b000000000 &1
b00000000000000000000000000000000 #s
b00000000000000000000000000000000 $T
b00000000000000000000000000000000 $S
b00000000000000000000000000000000 $R
b00000000000000000000000000000000 $I
b0000000 #
b00000000000000000000000000000000 #g
b00000000000000000000000000000000 %)
b000000000 $b
b00000000000000000000000000000000 %(
b00000000000000000000000000000000 %'
b00000000000000000000000000000000 %-
b00000000000000000000000000000000 #j
b00000000000000000000000000000000 #i
b00000000000000000000000000000000 $J
b00000000000000000000000000000000 &#
b00000000 %y
b00000000000000000000000000000000 #~
b00000000000000000000000000000000 $_
b00000000000000000000000000000000 &!
b00000000 %x
b00000000000000000000000000000000 #}
b00000000000000000000000000000000 $^
b00000000000000000000000000000000 $d
b00000000000000000000000000000000 &%
b00000000000000000000000000000000 &$
b000000000 $`
b00000000000000000000000000000000 #u
b00000000000000000000000000000000 $V
b00000000000000000000000000000000 #|
b000000000 #v
b00000000000000000000000000000000 $\
b000000000 %7
b00000000000000000000000000000000 #z
b00000000000000000000000000000000 $[
b00000000000000000000000000000000 $Z
b00000000000000000000000000000000 ".
b00000000000000000000000000000000 "0
b00000000000000000000000000000000 "&
b00000000000000000000000000000000 "$
b00000000000000000000000000000000 "+
b00000000000000000000000000000000 "*
b00000000000000000000000000000000 ")
b00000000000000000000000000000000 "C
b00000000000000000000000000000000 "A
b00000000000000000000000000000000 ";
b00000000000000000000000000000000 "9
b00000000000000000000000000000000 "O
b00000000000000000000000000000000 #0
b00000000000000000000000000000000 "N
b00000000000000000000000000000000 #/
b00000000000000000000000000000000 "L
b00000000000000000000000000000000 "S
b00000000000000000000000000000000 "R
b00000000000000000000000000000000 #3
b00000000000000000000000000000000 "G
b00000000000000000000000000000000 #(
b00000000000000000000000000000000 "K
b00000000000000000000000000000000 "J
b00000000000000000000000000000000 "I
b00000000000000000000000000000000 "_
b00000000000000000000000000000000 #@
b00000000000000000000000000000000 #?
b00000000000000000000000000000000 #>
b00000000000000000000000000000000 #=
b00000000000000000000000000000000 "c
b00000000000000000000000000000000 #D
b00000000000000000000000000000000 $%
b00000000000000000000000000000000 #C
b00000000000000000000000000000000 $$
b00000000000000000000000000000000 "a
b00000000000000000000000000000000 $#
b00000000000000000000000000000000 "`
b00000000000000000000000000000000 #A
b00000000000000000000000000000000 $"
b00000000000000000000000000000000 "V
b00000000000000000000000000000000 "T
b00000000000000000000000000000000 #<
b00000000000000000000000000000000 "Z
b00000000000000000000000000000000 "Y
b00000000000000000000000000000000 #:
b00000000000000000000000000000000 #9
b00000000 "1
b000 $f
b00000000 "8
b00000000 "=
b00000000 "B
b00000000 #+
b00000000 #.
b00000000 #-
b00000000 #4
b00000000 #7
b00000000000000000000000000000000 "#
b00000000000000000000000000000000 ""
b00000000 #;
b000 $4
b000 %*
b000 %1
$end
#0
1"b
1B
1$&
1C
1"'
b00000000000000000000010100010011 #H
1&.
1",
1$o
b00000000000000000000000000000100 ".
b00000000000000000000010100010011 "o
1$2
b00000101 O
b00000000000000000000000001110011 "q
1P
b00000101110100000000100010010011 "r
b00010011 &8
1#W
1$=
b00000000000000000000010100010011 %`
1">
b00000000000000000000000000000100 %b
b00000000000000000000010100010011 "C
1%h
b00000000000000000000010100010011 f
b00000000000000000000000000000100 $J
1#*
1h
10
1r
1"X
b00000000000000000000000000010011 "Z
1%@
b00000000000000000000010100010011 |
b11 &"
1>
#1
1$/
1"u
1#c
1#d
1%&
b0110011 #
1$H
1#h
1$M
1%/
1#r
1#t
1%8
b00000000001101100011 #w
1$X
1%<
18
1%=
1%?
1%C
1%E
1D
b01 F
1"(
1&-
1"-
1$q
b1111111111 N
1$r
1$s
1Q
b00000000000000000000000000110011 R
1$v
1%X
1T
1"7
b0110011 "<
1_
1%d
1#'
1g
1i
1j
1l
1n
1"Q
1q
1#6
b11111111111 #8
1"W
#6
0"(
0&-
0&.
0",
0$q
0$2
0$r
0$s
0Q
0$v
0"u
0%X
0T
0$=
0">
0_
0#c
0%&
0#'
0$H
0#h
0#*
0h
0%/
0"Q
0#r
00
0q
0#t
0%8
0$X
0"X
08
0%=
0>
#11
0"b
b00000101110100000000100010010011 #H
b00000000000000000000000000000100 $1
1"u
b00000000000000000000000000000100 #Y
1$A
b01010 %$
1#c
1%&
b0010011 #
1$H
1#h
b00000000000000000000000000001000 $J
1$L
1%/
1#r
1#t
1%8
1$W
b00000000001101100010 #w
1$X
18
1%=
b001 $f
1"(
1&-
b00000000000000000000000000001000 ".
1$q
1$r
1$s
1Q
b00000000000000000000010100010011 R
1$v
1%X
1T
b00000000001101100011 W
b0010011 "<
b00000000000000000000000000001000 %b
b11101 "@
1_
b00000101110100000000100010010011 "C
1"D
1#'
1#,
1"Q
1q
0r
b00000101110100000000100010010011 |
#16
0"(
0&-
0$q
0$r
0$s
0Q
0$v
0"u
0%X
0T
0_
0#c
0%&
0#'
0$H
0#h
0%/
0"Q
0#r
0q
0#t
0%8
0$X
08
0%=
#21
b11101 "f
b00000000000000000000000001110011 #H
b00000000000000000000000000000100 #I
b00000000000000000000000001011101 #L
b00000000000000000000000000001000 $1
b0000010 $6
1"u
b00000000000000000000000001011101 $8
1"w
b00000000000000000000000000001000 #Y
b0000010111 "y
b00000000000000000000000001011101 #Z
b00000000000000000000000001011101 "{
b01010 $@
b10001 %$
1#c
b11101 %%
1%&
1$H
b00000000000000000000000001011101 #g
b11101 %
1#h
b00000000000000000000000000000100 $I
b00000000000000000000000000001100 $J
1%,
1%/
1#r
1#t
b00000000000000000000000001011101 #u
1%8
b000000101 #v
b00000000001101100001 #w
1$X
b01 7
18
1%=
b00000000000000000000000001011101 $_
b0000010111 =
b11101 $a
1"(
b00000101 G
1&-
b000000101 &1
b00000000000000000000000000001100 ".
1$q
b00000000000000000000000001011101 "0
1$r
1$s
b00000000000000000000000001011101 &5
1Q
b00000101110100000000100010010011 R
1$v
1%X
b0000010111 &9
1T
b00000000001101100010 W
b00000000000000000000000000001100 %b
b00000 "@
1_
b00000000000000000000000001110011 "C
0%h
1#'
1%i
b00000000000000000000000001011101 #/
1"Q
b01010 p
b00000000000000000000000001011101 #3
1q
b01010 "U
1u
b0000010111 "[
b00000000000000000000000001110011 |
#26
0"(
0&-
0$q
0$r
0$s
0Q
0$v
0"u
0%X
0T
0_
0#c
0%&
0#'
0$H
0#h
0%/
0"Q
0#r
0q
0#t
0%8
0$X
08
0%=
#31
b1110011 #
b00000 %
b00000000000000000000000001011101 (
b01 -
b00 7
18
b11101 :
b0000000000 =
1"(
b00000000 G
b00000000000000000000000001011101 "+
1J
b00000000000000000000000000010000 ".
b00000000000000000000000001011101 M
b00000000000000000000000000000000 "0
b00000000 O
1Q
b00000000000000000000000001110011 R
b0000010111 S
1T
b00000000001101100001 W
b1110011 "<
b00000000000000000000000000000100 \
1_
b0000010111 #"
b00000000000000000000010100010011 "C
1#'
b00000000000000000000000000000000 f
0#,
b00000000000000000000000000000000 #/
b00000000000000000000000001100001 #0
b00000000000000000000000001011101 o
1"Q
b10001 p
b00000000000000000000000000000000 #3
1q
b00000000000000000000000001011101 s
b10001 "U
0"W
b00000000000000000000000000000000 "Z
b0000000000 "[
b00000000000000000000010100010011 |
b00000 "f
b00000000000000000000010100010011 #H
b00000000000000000000000000001000 #I
b0000010111 $,
b00000000000000000000000000000000 #L
1#M
b00000000000000000000000000001100 $1
1$5
b0000000 $6
1"u
b00000000000000000000000000000000 $8
b00000000000000000000000000001100 #Y
b0000000000 "y
b00000000000000000000000000000000 #Z
b00000000000000000000000000000000 "{
b01010 "}
b10001 $@
b00000 %$
1#c
b00000 %%
1%&
1$H
b00000000000000000000000000000000 #g
1#h
b00000000000000000000000000001000 $I
b0000010111 %+
b00000000000000000000000000010000 $J
0$L
1%/
b00000000000000000000000001011101 #m
b0000010111 %2
1#r
b0000010111 $U
1#t
b00000000000000000000000000000000 #u
1%8
b000000000 #v
b00000000001101100000 #w
1$X
1%9
b0000010111 $Y
1%=
b00000000000000000000000000000000 $_
b0000010111 %A
b00000 $a
b000000101 $b
0%C
b0000010111 &*
1&-
b0000010111 &/
b0000010111 &0
b000000000 &1
1$q
1$r
1$s
b00000000000000000000000000000000 &5
b00000000000000000000000001011101 &6
1$v
b00000000 &8
1%X
b0000000000 &9
b01010 &=
b00000000000000000000000000000000 %`
b00000000000000000000000000010000 %b
1%h
0%i
b0000010111 %n
#36
0"(
0&-
0$q
0$r
0$s
0Q
0$v
0"u
0%X
0T
0_
0#c
0%&
0#'
0$H
0#h
0%/
0"Q
0#r
0q
0#t
0%8
0$X
08
0%=
#41
b00000000000000000000000001011101 $)
b00000000000000000000000000001100 #I
b00000000000000000000000001011101 "i
b0000000000 $,
0#M
b00000000000000000000000000010000 $1
0$5
1"u
0"w
b00000000000000000000000000010000 #Y
b10001 "}
b00000 $@
1$C
b01010 %$
1#c
1%&
b00000000000000000000000001011101 "
b0010011 #
1$H
1#h
b00000000000000000000000000001100 $I
b0000000000 %+
b00000000000000000000000000010100 $J
0%,
b00000000000000000000000000000000 (
1$L
1%/
b00000000000000000000000000000000 #m
b00 -
b0000000000 %2
1#r
1%4
b0000000000 $U
1#t
b00000000000000000000000001011101 3
1%8
0$W
b00000000001101011111 #w
1$X
b0000000000 $Y
18
1%=
b00000 :
b00000000000000000000000001011101 &!
b0000000000 %A
b000000000 $b
1%C
b0000000000 &*
1"(
b00000000000000000000000001011101 $j
1&-
b00000000000000000000000000000000 "+
b0000000000 &/
b0000000000 &0
b00000000000000000000000000010100 ".
b00000000000000000000000000000000 M
1$q
1$r
b00000101 O
1$s
b00000000000000000000000000000000 &6
1Q
b00000000000000000000010100010011 R
1$v
b00010011 &8
b0000000000 S
1%X
1T
b00000000001101100000 W
b10001 &=
b0010011 "<
b00000000000000000000010100010011 %`
b00000000000000000000000000001000 \
b00000000000000000000000000010100 %b
1_
b0000000000 #"
0"D
1#'
b00000000000000000000010100010011 f
1#,
b0000000000 %n
1"M
b00000000000000000000000000001000 #0
b00000000000000000000000000000000 o
1"Q
b00000 p
1q
b00000000000000000000000000000000 s
b00000 "U
b00000000000000000000000001011101 t
0u
1"W
1v
b00000000000000000000000000010011 "Z
1y
#46
0"(
0&-
0$q
0$r
0$s
0Q
0$v
0"u
0%X
0T
0_
0#c
0%&
0#'
0$H
0#h
0%/
0"Q
0#r
0q
0#t
0%8
0$X
08
0%=
