FIRRTL version 1.1.0
circuit SpiMemController :
  module SpiMemController :
    input clock : Clock
    input reset : UInt<1>
    input io_rst : UInt<1>
    input io_rw : UInt<1>
    input io_en : UInt<1>
    input io_addr : UInt<24>
    input io_dataIn : UInt<32>
    output io_dataOut : UInt<32>
    output io_done : UInt<1>
    output io_ce : UInt<1>
    output io_sclk : UInt<1>
    output io_si : UInt<1>
    input io_so : UInt<1>
    output io_sioIn : UInt<4>
    input io_sioOut : UInt<4>

    reg stateReg : UInt<4>, clock with :
      reset => (UInt<1>("h0"), stateReg) @[SpiMemController.scala 47:27]
    reg shiftRegIn : UInt<32>, clock with :
      reset => (UInt<1>("h0"), shiftRegIn) @[SpiMemController.scala 49:29]
    reg shiftRegOut : UInt<32>, clock with :
      reset => (UInt<1>("h0"), shiftRegOut) @[SpiMemController.scala 50:30]
    reg bitCounter : UInt<6>, clock with :
      reset => (UInt<1>("h0"), bitCounter) @[SpiMemController.scala 51:29]
    reg sclkReg : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sclkReg) @[SpiMemController.scala 52:26]
    reg ceReg : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ceReg) @[SpiMemController.scala 53:24]
    reg dataInReg : UInt<32>, clock with :
      reset => (UInt<1>("h0"), dataInReg) @[SpiMemController.scala 54:28]
    reg quadReg : UInt<1>, clock with :
      reset => (UInt<1>("h0"), quadReg) @[SpiMemController.scala 55:26]
    reg rstCnt : UInt<1>, clock with :
      reset => (UInt<1>("h0"), rstCnt) @[SpiMemController.scala 58:25]
    node _T = eq(stateReg, UInt<3>("h6")) @[SpiMemController.scala 59:20]
    node _T_1 = and(_T, ceReg) @[SpiMemController.scala 59:28]
    node _rstCnt_T = add(rstCnt, UInt<1>("h1")) @[SpiMemController.scala 60:26]
    node _rstCnt_T_1 = tail(_rstCnt_T, 1) @[SpiMemController.scala 60:26]
    node _T_2 = eq(rstCnt, UInt<1>("h1")) @[SpiMemController.scala 61:22]
    node _GEN_0 = mux(_T_2, UInt<1>("h0"), _rstCnt_T_1) @[SpiMemController.scala 60:16 61:39 62:20]
    node _GEN_1 = mux(_T_1, _GEN_0, rstCnt) @[SpiMemController.scala 58:25 59:38]
    node _io_si_T = bits(shiftRegOut, 31, 31) @[SpiMemController.scala 69:25]
    node _io_sioIn_T = bits(shiftRegOut, 31, 28) @[SpiMemController.scala 70:28]
    node _shiftRegIn_T = cat(UInt<1>("h0"), io_sioOut) @[Cat.scala 33:92]
    node _shiftRegIn_T_1 = and(shiftRegIn, _shiftRegIn_T) @[SpiMemController.scala 71:30]
    node _io_done_T = eq(stateReg, UInt<3>("h4")) @[SpiMemController.scala 74:26]
    reg shiftRstReg : UInt<8>, clock with :
      reset => (UInt<1>("h0"), shiftRstReg) @[SpiMemController.scala 76:30]
    node _T_3 = asUInt(UInt<1>("h0")) @[SpiMemController.scala 80:23]
    node _T_4 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_5 = eq(_T_3, _T_4) @[SpiMemController.scala 80:23]
    node _T_6 = eq(quadReg, UInt<1>("h0")) @[SpiMemController.scala 82:19]
    node _io_sioIn_T_1 = bits(shiftRegOut, 31, 31) @[SpiMemController.scala 90:40]
    node _shiftRegOut_T = cat(UInt<2>("h2"), io_addr) @[Cat.scala 33:92]
    node _shiftRegOut_T_1 = cat(UInt<8>("heb"), io_addr) @[Cat.scala 33:92]
    node _GEN_2 = mux(io_rw, _shiftRegOut_T, _shiftRegOut_T_1) @[SpiMemController.scala 100:30 101:33 105:33]
    node _GEN_3 = mux(io_rw, UInt<4>("hf"), UInt<3>("h7")) @[SpiMemController.scala 100:30 102:32 106:32]
    node _GEN_4 = mux(io_rw, UInt<2>("h3"), UInt<2>("h2")) @[SpiMemController.scala 100:30 103:30 107:30]
    node _GEN_5 = mux(io_en, UInt<1>("h0"), ceReg) @[SpiMemController.scala 98:31 99:23 53:24]
    node _GEN_6 = mux(io_en, _GEN_2, shiftRegOut) @[SpiMemController.scala 50:30 98:31]
    node _GEN_7 = mux(io_en, _GEN_3, bitCounter) @[SpiMemController.scala 51:29 98:31]
    node _GEN_8 = mux(io_en, _GEN_4, stateReg) @[SpiMemController.scala 47:27 98:31]
    node _GEN_9 = mux(io_rst, UInt<1>("h0"), _GEN_5) @[SpiMemController.scala 92:32 93:23]
    node _GEN_10 = mux(io_rst, UInt<31>("h66000000"), _GEN_6) @[SpiMemController.scala 92:32 94:29]
    node _GEN_11 = mux(io_rst, UInt<1>("h1"), _GEN_7) @[SpiMemController.scala 92:32 95:28]
    node _GEN_12 = mux(io_rst, UInt<3>("h5"), _GEN_8) @[SpiMemController.scala 92:32 96:26]
    node _GEN_13 = mux(_T_6, UInt<1>("h1"), quadReg) @[SpiMemController.scala 82:29 85:25 55:26]
    node _GEN_14 = mux(_T_6, UInt<1>("h0"), _GEN_9) @[SpiMemController.scala 82:29 86:23]
    node _GEN_15 = mux(_T_6, UInt<30>("h35000000"), _GEN_10) @[SpiMemController.scala 82:29 87:29]
    node _GEN_16 = mux(_T_6, UInt<3>("h7"), _GEN_11) @[SpiMemController.scala 82:29 88:28]
    node _GEN_17 = mux(_T_6, UInt<1>("h1"), _GEN_12) @[SpiMemController.scala 82:29 89:26]
    node _GEN_18 = mux(_T_6, _io_sioIn_T_1, _io_sioIn_T) @[SpiMemController.scala 70:14 82:29 90:26]
    node _T_7 = asUInt(UInt<1>("h1")) @[SpiMemController.scala 80:23]
    node _T_8 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_9 = eq(_T_7, _T_8) @[SpiMemController.scala 80:23]
    node _io_sioIn_T_2 = bits(shiftRegOut, 31, 31) @[SpiMemController.scala 112:36]
    node _shiftRegOut_T_2 = shl(shiftRegOut, 1) @[SpiMemController.scala 113:40]
    node _bitCounter_T = sub(bitCounter, UInt<1>("h1")) @[SpiMemController.scala 114:38]
    node _bitCounter_T_1 = tail(_bitCounter_T, 1) @[SpiMemController.scala 114:38]
    node _T_10 = eq(bitCounter, UInt<1>("h0")) @[SpiMemController.scala 115:30]
    node _GEN_19 = mux(_T_10, UInt<1>("h0"), _shiftRegOut_T_2) @[SpiMemController.scala 113:25 115:39 116:29]
    node _GEN_20 = mux(_T_10, UInt<1>("h1"), ceReg) @[SpiMemController.scala 115:39 117:23 53:24]
    node _GEN_21 = mux(_T_10, UInt<3>("h4"), stateReg) @[SpiMemController.scala 115:39 118:26 47:27]
    node _T_11 = asUInt(UInt<2>("h2")) @[SpiMemController.scala 80:23]
    node _T_12 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_13 = eq(_T_11, _T_12) @[SpiMemController.scala 80:23]
    node _shiftRegOut_T_3 = shl(shiftRegOut, 4) @[SpiMemController.scala 127:40]
    node _bitCounter_T_2 = sub(bitCounter, UInt<1>("h1")) @[SpiMemController.scala 128:38]
    node _bitCounter_T_3 = tail(_bitCounter_T_2, 1) @[SpiMemController.scala 128:38]
    node _T_14 = eq(bitCounter, UInt<1>("h0")) @[SpiMemController.scala 129:30]
    reg counter : UInt<3>, clock with :
      reset => (UInt<1>("h0"), counter) @[SpiMemController.scala 35:30]
    reg end : UInt<1>, clock with :
      reset => (UInt<1>("h0"), end) @[SpiMemController.scala 36:26]
    node _T_15 = eq(end, UInt<1>("h0")) @[SpiMemController.scala 38:15]
    node _counter_T = add(counter, UInt<1>("h1")) @[SpiMemController.scala 39:36]
    node _counter_T_1 = tail(_counter_T, 1) @[SpiMemController.scala 39:36]
    node _T_16 = eq(counter, UInt<3>("h5")) @[SpiMemController.scala 40:31]
    node _GEN_22 = mux(_T_16, UInt<1>("h1"), end) @[SpiMemController.scala 40:46 41:25 36:26]
    node _GEN_23 = mux(_T_15, _counter_T_1, counter) @[SpiMemController.scala 38:21 39:25 35:30]
    node _GEN_24 = mux(_T_15, _GEN_22, end) @[SpiMemController.scala 38:21 36:26]
    node _GEN_25 = mux(_T_14, UInt<3>("h7"), _bitCounter_T_3) @[SpiMemController.scala 128:24 129:39 131:28]
    node _GEN_26 = mux(_T_14, UInt<4>("h9"), stateReg) @[SpiMemController.scala 129:39 132:26 47:27]
    node _T_17 = asUInt(UInt<4>("h9")) @[SpiMemController.scala 80:23]
    node _T_18 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_19 = eq(_T_17, _T_18) @[SpiMemController.scala 80:23]
    node _shiftRegIn_T_2 = shl(shiftRegIn, 4) @[SpiMemController.scala 138:38]
    node _bitCounter_T_4 = sub(bitCounter, UInt<1>("h1")) @[SpiMemController.scala 139:38]
    node _bitCounter_T_5 = tail(_bitCounter_T_4, 1) @[SpiMemController.scala 139:38]
    node _T_20 = eq(bitCounter, UInt<1>("h0")) @[SpiMemController.scala 140:30]
    node _GEN_27 = mux(_T_20, UInt<3>("h4"), stateReg) @[SpiMemController.scala 140:39 141:26 47:27]
    node _T_21 = asUInt(UInt<2>("h3")) @[SpiMemController.scala 80:23]
    node _T_22 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_23 = eq(_T_21, _T_22) @[SpiMemController.scala 80:23]
    node _shiftRegOut_T_4 = shl(shiftRegOut, 4) @[SpiMemController.scala 147:40]
    node _bitCounter_T_6 = sub(bitCounter, UInt<1>("h1")) @[SpiMemController.scala 148:38]
    node _bitCounter_T_7 = tail(_bitCounter_T_6, 1) @[SpiMemController.scala 148:38]
    node _T_24 = eq(bitCounter, UInt<4>("h8")) @[SpiMemController.scala 149:30]
    node _GEN_28 = mux(_T_24, io_dataIn, _shiftRegOut_T_4) @[SpiMemController.scala 147:25 149:39 151:29]
    node _T_25 = eq(bitCounter, UInt<1>("h0")) @[SpiMemController.scala 153:30]
    node _GEN_29 = mux(_T_25, UInt<1>("h1"), ceReg) @[SpiMemController.scala 153:39 154:23 53:24]
    node _GEN_30 = mux(_T_25, UInt<3>("h4"), stateReg) @[SpiMemController.scala 153:39 155:26 47:27]
    node _T_26 = asUInt(UInt<3>("h4")) @[SpiMemController.scala 80:23]
    node _T_27 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_28 = eq(_T_26, _T_27) @[SpiMemController.scala 80:23]
    node _T_29 = asUInt(UInt<3>("h5")) @[SpiMemController.scala 80:23]
    node _T_30 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_31 = eq(_T_29, _T_30) @[SpiMemController.scala 80:23]
    node _shiftRegOut_T_5 = shl(shiftRegOut, 4) @[SpiMemController.scala 165:40]
    node _bitCounter_T_8 = sub(bitCounter, UInt<1>("h1")) @[SpiMemController.scala 166:38]
    node _bitCounter_T_9 = tail(_bitCounter_T_8, 1) @[SpiMemController.scala 166:38]
    node _T_32 = eq(bitCounter, UInt<1>("h0")) @[SpiMemController.scala 167:30]
    node _GEN_31 = mux(_T_32, UInt<3>("h7"), stateReg) @[SpiMemController.scala 167:39 168:26 47:27]
    node _GEN_32 = mux(_T_32, UInt<1>("h1"), ceReg) @[SpiMemController.scala 167:39 169:23 53:24]
    node _T_33 = asUInt(UInt<3>("h6")) @[SpiMemController.scala 80:23]
    node _T_34 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_35 = eq(_T_33, _T_34) @[SpiMemController.scala 80:23]
    node _io_sioIn_T_3 = bits(shiftRstReg, 7, 4) @[SpiMemController.scala 174:36]
    node _shiftRstReg_T = shl(shiftRstReg, 4) @[SpiMemController.scala 176:40]
    node _bitCounter_T_10 = sub(bitCounter, UInt<1>("h1")) @[SpiMemController.scala 177:38]
    node _bitCounter_T_11 = tail(_bitCounter_T_10, 1) @[SpiMemController.scala 177:38]
    node _T_36 = eq(bitCounter, UInt<1>("h0")) @[SpiMemController.scala 178:30]
    node _GEN_33 = mux(_T_36, UInt<3>("h4"), stateReg) @[SpiMemController.scala 178:39 179:26 47:27]
    node _T_37 = asUInt(UInt<3>("h7")) @[SpiMemController.scala 80:23]
    node _T_38 = asUInt(stateReg) @[SpiMemController.scala 80:23]
    node _T_39 = eq(_T_37, _T_38) @[SpiMemController.scala 80:23]
    node _io_sioIn_T_4 = bits(shiftRstReg, 7, 4) @[SpiMemController.scala 186:36]
    node _GEN_34 = mux(_T_39, UInt<1>("h0"), ceReg) @[SpiMemController.scala 184:19 80:23 53:24]
    node _GEN_35 = mux(_T_39, UInt<8>("h99"), shiftRstReg) @[SpiMemController.scala 80:23 185:25 76:30]
    node _GEN_36 = mux(_T_39, _io_sioIn_T_4, _io_sioIn_T) @[SpiMemController.scala 186:22 70:14 80:23]
    node _GEN_37 = mux(_T_39, UInt<1>("h1"), bitCounter) @[SpiMemController.scala 80:23 187:24 51:29]
    node _GEN_38 = mux(_T_39, UInt<3>("h6"), stateReg) @[SpiMemController.scala 188:22 80:23 47:27]
    node _GEN_39 = mux(_T_35, _io_sioIn_T_3, _GEN_36) @[SpiMemController.scala 174:22 80:23]
    node _GEN_40 = mux(_T_35, _shiftRstReg_T, _GEN_35) @[SpiMemController.scala 80:23 176:25]
    node _GEN_41 = mux(_T_35, _bitCounter_T_11, _GEN_37) @[SpiMemController.scala 80:23 177:24]
    node _GEN_42 = mux(_T_35, _GEN_33, _GEN_38) @[SpiMemController.scala 80:23]
    node _GEN_43 = mux(_T_35, ceReg, _GEN_34) @[SpiMemController.scala 80:23 53:24]
    node _GEN_44 = mux(_T_31, _shiftRegOut_T_5, shiftRegOut) @[SpiMemController.scala 80:23 165:25 50:30]
    node _GEN_45 = mux(_T_31, _bitCounter_T_9, _GEN_41) @[SpiMemController.scala 80:23 166:24]
    node _GEN_46 = mux(_T_31, _GEN_31, _GEN_42) @[SpiMemController.scala 80:23]
    node _GEN_47 = mux(_T_31, _GEN_32, _GEN_43) @[SpiMemController.scala 80:23]
    node _GEN_48 = mux(_T_31, _io_sioIn_T, _GEN_39) @[SpiMemController.scala 70:14 80:23]
    node _GEN_49 = mux(_T_31, shiftRstReg, _GEN_40) @[SpiMemController.scala 80:23 76:30]
    node _GEN_50 = mux(_T_28, UInt<1>("h1"), _GEN_47) @[SpiMemController.scala 160:19 80:23]
    node _GEN_51 = mux(_T_28, UInt<1>("h0"), _GEN_46) @[SpiMemController.scala 161:22 80:23]
    node _GEN_52 = mux(_T_28, shiftRegOut, _GEN_44) @[SpiMemController.scala 80:23 50:30]
    node _GEN_53 = mux(_T_28, bitCounter, _GEN_45) @[SpiMemController.scala 80:23 51:29]
    node _GEN_54 = mux(_T_28, _io_sioIn_T, _GEN_48) @[SpiMemController.scala 70:14 80:23]
    node _GEN_55 = mux(_T_28, shiftRstReg, _GEN_49) @[SpiMemController.scala 80:23 76:30]
    node _GEN_56 = mux(_T_23, _GEN_28, _GEN_52) @[SpiMemController.scala 80:23]
    node _GEN_57 = mux(_T_23, _bitCounter_T_7, _GEN_53) @[SpiMemController.scala 80:23 148:24]
    node _GEN_58 = mux(_T_23, _GEN_29, _GEN_50) @[SpiMemController.scala 80:23]
    node _GEN_59 = mux(_T_23, _GEN_30, _GEN_51) @[SpiMemController.scala 80:23]
    node _GEN_60 = mux(_T_23, _io_sioIn_T, _GEN_54) @[SpiMemController.scala 70:14 80:23]
    node _GEN_61 = mux(_T_23, shiftRstReg, _GEN_55) @[SpiMemController.scala 80:23 76:30]
    node _GEN_62 = mux(_T_19, _shiftRegIn_T_2, _shiftRegIn_T_1) @[SpiMemController.scala 80:23 138:24 71:16]
    node _GEN_63 = mux(_T_19, _bitCounter_T_5, _GEN_57) @[SpiMemController.scala 80:23 139:24]
    node _GEN_64 = mux(_T_19, _GEN_27, _GEN_59) @[SpiMemController.scala 80:23]
    node _GEN_65 = mux(_T_19, shiftRegOut, _GEN_56) @[SpiMemController.scala 80:23 50:30]
    node _GEN_66 = mux(_T_19, ceReg, _GEN_58) @[SpiMemController.scala 80:23 53:24]
    node _GEN_67 = mux(_T_19, _io_sioIn_T, _GEN_60) @[SpiMemController.scala 70:14 80:23]
    node _GEN_68 = mux(_T_19, shiftRstReg, _GEN_61) @[SpiMemController.scala 80:23 76:30]
    node _GEN_69 = mux(_T_13, _shiftRegOut_T_3, _GEN_65) @[SpiMemController.scala 80:23 127:25]
    node _GEN_70 = mux(_T_13, _GEN_25, _GEN_63) @[SpiMemController.scala 80:23]
    node _GEN_71 = mux(_T_13, _GEN_26, _GEN_64) @[SpiMemController.scala 80:23]
    node _GEN_72 = mux(_T_13, _shiftRegIn_T_1, _GEN_62) @[SpiMemController.scala 71:16 80:23]
    node _GEN_73 = mux(_T_13, ceReg, _GEN_66) @[SpiMemController.scala 80:23 53:24]
    node _GEN_74 = mux(_T_13, _io_sioIn_T, _GEN_67) @[SpiMemController.scala 70:14 80:23]
    node _GEN_75 = mux(_T_13, shiftRstReg, _GEN_68) @[SpiMemController.scala 80:23 76:30]
    node _GEN_76 = mux(_T_9, _io_sioIn_T_2, _GEN_74) @[SpiMemController.scala 112:22 80:23]
    node _GEN_77 = mux(_T_9, _GEN_19, _GEN_69) @[SpiMemController.scala 80:23]
    node _GEN_78 = mux(_T_9, _bitCounter_T_1, _GEN_70) @[SpiMemController.scala 80:23 114:24]
    node _GEN_79 = mux(_T_9, _GEN_20, _GEN_73) @[SpiMemController.scala 80:23]
    node _GEN_80 = mux(_T_9, _GEN_21, _GEN_71) @[SpiMemController.scala 80:23]
    node _GEN_81 = mux(_T_9, _shiftRegIn_T_1, _GEN_72) @[SpiMemController.scala 71:16 80:23]
    node _GEN_82 = mux(_T_9, shiftRstReg, _GEN_75) @[SpiMemController.scala 80:23 76:30]
    node _GEN_83 = mux(_T_5, _GEN_13, quadReg) @[SpiMemController.scala 80:23 55:26]
    node _GEN_84 = mux(_T_5, _GEN_14, _GEN_79) @[SpiMemController.scala 80:23]
    node _GEN_85 = mux(_T_5, _GEN_15, _GEN_77) @[SpiMemController.scala 80:23]
    node _GEN_86 = mux(_T_5, _GEN_16, _GEN_78) @[SpiMemController.scala 80:23]
    node _GEN_87 = mux(_T_5, _GEN_17, _GEN_80) @[SpiMemController.scala 80:23]
    node _GEN_88 = mux(_T_5, _GEN_18, _GEN_76) @[SpiMemController.scala 80:23]
    node _GEN_89 = mux(_T_5, _shiftRegIn_T_1, _GEN_81) @[SpiMemController.scala 71:16 80:23]
    node _GEN_90 = mux(_T_5, shiftRstReg, _GEN_82) @[SpiMemController.scala 80:23 76:30]
    io_dataOut <= UInt<32>("h0") @[SpiMemController.scala 78:16]
    io_done <= _io_done_T @[SpiMemController.scala 74:13]
    io_ce <= ceReg @[SpiMemController.scala 67:11]
    io_sclk <= sclkReg @[SpiMemController.scala 66:13]
    io_si <= _io_si_T @[SpiMemController.scala 69:11]
    io_sioIn <= _GEN_88
    stateReg <= mux(reset, UInt<1>("h0"), _GEN_87) @[SpiMemController.scala 47:{27,27}]
    shiftRegIn <= bits(mux(reset, UInt<32>("h0"), _GEN_89), 31, 0) @[SpiMemController.scala 49:{29,29}]
    shiftRegOut <= bits(mux(reset, UInt<32>("h0"), _GEN_85), 31, 0) @[SpiMemController.scala 50:{30,30}]
    bitCounter <= mux(reset, UInt<6>("h0"), _GEN_86) @[SpiMemController.scala 51:{29,29}]
    sclkReg <= mux(reset, UInt<1>("h0"), sclkReg) @[SpiMemController.scala 52:{26,26,26}]
    ceReg <= mux(reset, UInt<1>("h0"), _GEN_84) @[SpiMemController.scala 53:{24,24}]
    dataInReg <= mux(reset, UInt<32>("h0"), io_dataIn) @[SpiMemController.scala 54:{28,28} 73:15]
    quadReg <= mux(reset, UInt<1>("h0"), _GEN_83) @[SpiMemController.scala 55:{26,26}]
    rstCnt <= mux(reset, UInt<1>("h0"), _GEN_1) @[SpiMemController.scala 58:{25,25}]
    shiftRstReg <= bits(mux(reset, UInt<8>("h0"), _GEN_90), 7, 0) @[SpiMemController.scala 76:{30,30}]
    counter <= mux(reset, UInt<3>("h0"), _GEN_23) @[SpiMemController.scala 35:{30,30}]
    end <= mux(reset, UInt<1>("h0"), _GEN_24) @[SpiMemController.scala 36:{26,26}]
